server:
  port: 0 # 0 으로 설정하면 매번 랜덤값으로 port가 부여되어 실행되지만
  # 여러개의 클라이언트를 등록할수는 없으므로 eureka.instance.instance-id 설정이 반드시 명시되어야만 한다.
spring:
  application:
    name: order-service
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console

  datasource:
    # 분산추적 (sleuth + zipkin) 을 해야할 경우 활성화하고, mariadb 설정은 비활성화해주세요.
    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1
    username: sa
    password:
    driver-class-name: org.h2.Driver
    # 단일 데이터베이스로 mariaDB를 사용하기 위해 설정을 아래와 같이 변경
#    url: jdbc:mariadb://localhost:3306/mydb
#    username: root
#    password: netpuneo5
#    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQL5Dialect
        jdbc:
          lob:
            non_contextual_creation: true

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    fetch-registry: true # 유레카 서버로부터 인스턴스들의 정보를 주기적으로 가져올 것인지 설정. true이면 갱신된 정보를 받겠다는 뜻. 기본값은 true.
    register-with-eureka: true # 유레카 서버에 클라이언트를 등록시킬지 여부 설정. 기본값은 true.
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka # 유레카 서버 주소 지정

logging:
  level:
    com.example.msaorderservice: DEBUG
